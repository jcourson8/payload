/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CartItems".
 */
export type CartItems =
  | {
      product?: (number | null) | Product
      variant?: string | null
      stripeProductID?: string | null
      quantity?: number | null
      url?: string | null
      id?: string | null
    }[]
  | null

export interface Config {
  auth: {
    users: UserAuthOperations
  }
  collections: {
    users: User
    products: Product
    pages: Page
    categories: Category
    media: Media
    orders: Order
    redirects: Redirect
    forms: Form
    'form-submissions': FormSubmission
    'payload-locked-documents': PayloadLockedDocument
    'payload-preferences': PayloadPreference
    'payload-migrations': PayloadMigration
  }
  collectionsJoins: {}
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>
    products: ProductsSelect<false> | ProductsSelect<true>
    pages: PagesSelect<false> | PagesSelect<true>
    categories: CategoriesSelect<false> | CategoriesSelect<true>
    media: MediaSelect<false> | MediaSelect<true>
    orders: OrdersSelect<false> | OrdersSelect<true>
    redirects: RedirectsSelect<false> | RedirectsSelect<true>
    forms: FormsSelect<false> | FormsSelect<true>
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>
    'payload-locked-documents':
      | PayloadLockedDocumentsSelect<false>
      | PayloadLockedDocumentsSelect<true>
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>
  }
  db: {
    defaultIDType: number
  }
  globals: {
    footer: Footer
    header: Header
  }
  globalsSelect: {
    footer: FooterSelect<false> | FooterSelect<true>
    header: HeaderSelect<false> | HeaderSelect<true>
  }
  locale: null
  user: User & {
    collection: 'users'
  }
  jobs?: {
    tasks: unknown
    workflows?: unknown
  }
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string
    password: string
  }
  login: {
    email: string
    password: string
  }
  registerFirstUser: {
    email: string
    password: string
  }
  unlock: {
    email: string
    password: string
  }
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number
  name?: string | null
  roles?: ('admin' | 'customer')[] | null
  orders?: (number | Order)[] | null
  stripeCustomerID?: string | null
  cart?: {
    items?: CartItems
  }
  skipSync?: boolean | null
  updatedAt: string
  createdAt: string
  email: string
  resetPasswordToken?: string | null
  resetPasswordExpiration?: string | null
  salt?: string | null
  hash?: string | null
  loginAttempts?: number | null
  lockUntil?: string | null
  password?: string | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number
  orderedBy?: (number | null) | User
  stripePaymentIntentID?: string | null
  total: number
  currency: string
  items?:
    | {
        product: number | Product
        variant?: string | null
        quantity?: number | null
        id?: string | null
      }[]
    | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number
  title: string
  publishedOn?: string | null
  description?: {
    root: {
      type: string
      children: {
        type: string
        version: number
        [k: string]: unknown
      }[]
      direction: ('ltr' | 'rtl') | null
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
      indent: number
      version: number
    }
    [k: string]: unknown
  } | null
  gallery?:
    | {
        image: number | Media
        id?: string | null
      }[]
    | null
  layout?: (CallToActionBlock | ContentBlock | MediaBlock)[] | null
  enableVariants?: boolean | null
  variants?: {
    options?:
      | {
          label: string
          slug: string
          values?:
            | {
                label: string
                slug: string
                id?: string | null
              }[]
            | null
          id?: string | null
        }[]
      | null
    variants?:
      | {
          options: string[]
          stripeProductID?: string | null
          stock: number
          info?:
            | {
                [k: string]: unknown
              }
            | unknown[]
            | string
            | number
            | boolean
            | null
          images?:
            | {
                image?: (number | null) | Media
                id?: string | null
              }[]
            | null
          id?: string | null
        }[]
      | null
  }
  stripeProductID?: string | null
  info?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  stock?: number | null
  price?: number | null
  currency?: string | null
  categories?: (number | Category)[] | null
  relatedProducts?: (number | Product)[] | null
  slug?: string | null
  skipSync?: boolean | null
  meta?: {
    title?: string | null
    description?: string | null
    image?: (number | null) | Media
  }
  updatedAt: string
  createdAt: string
  _status?: ('draft' | 'published') | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number
  alt: string
  caption?: {
    root: {
      type: string
      children: {
        type: string
        version: number
        [k: string]: unknown
      }[]
      direction: ('ltr' | 'rtl') | null
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
      indent: number
      version: number
    }
    [k: string]: unknown
  } | null
  updatedAt: string
  createdAt: string
  url?: string | null
  thumbnailURL?: string | null
  filename?: string | null
  mimeType?: string | null
  filesize?: number | null
  width?: number | null
  height?: number | null
  focalX?: number | null
  focalY?: number | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string
      children: {
        type: string
        version: number
        [k: string]: unknown
      }[]
      direction: ('ltr' | 'rtl') | null
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
      indent: number
      version: number
    }
    [k: string]: unknown
  } | null
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null
          newTab?: boolean | null
          reference?: {
            relationTo: 'pages'
            value: number | Page
          } | null
          url?: string | null
          label: string
          appearance?: ('default' | 'outline') | null
        }
        id?: string | null
      }[]
    | null
  id?: string | null
  blockName?: string | null
  blockType: 'cta'
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number
  title: string
  publishedOn?: string | null
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact'
    richText?: {
      root: {
        type: string
        children: {
          type: string
          version: number
          [k: string]: unknown
        }[]
        direction: ('ltr' | 'rtl') | null
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
        indent: number
        version: number
      }
      [k: string]: unknown
    } | null
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null
            newTab?: boolean | null
            reference?: {
              relationTo: 'pages'
              value: number | Page
            } | null
            url?: string | null
            label: string
            appearance?: ('default' | 'outline') | null
          }
          id?: string | null
        }[]
      | null
    media?: (number | null) | Media
  }
  layout: (
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | CarouselBlock
    | ThreeItemGridBlock
    | BannerBlock
  )[]
  slug?: string | null
  meta?: {
    title?: string | null
    description?: string | null
    image?: (number | null) | Media
  }
  updatedAt: string
  createdAt: string
  _status?: ('draft' | 'published') | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null
        richText?: {
          root: {
            type: string
            children: {
              type: string
              version: number
              [k: string]: unknown
            }[]
            direction: ('ltr' | 'rtl') | null
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
            indent: number
            version: number
          }
          [k: string]: unknown
        } | null
        enableLink?: boolean | null
        link?: {
          type?: ('reference' | 'custom') | null
          newTab?: boolean | null
          reference?: {
            relationTo: 'pages'
            value: number | Page
          } | null
          url?: string | null
          label: string
          appearance?: ('default' | 'outline') | null
        }
        id?: string | null
      }[]
    | null
  id?: string | null
  blockName?: string | null
  blockType: 'content'
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  position?: ('default' | 'fullscreen') | null
  media: number | Media
  id?: string | null
  blockName?: string | null
  blockType: 'mediaBlock'
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string
      children: {
        type: string
        version: number
        [k: string]: unknown
      }[]
      direction: ('ltr' | 'rtl') | null
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
      indent: number
      version: number
    }
    [k: string]: unknown
  } | null
  populateBy?: ('collection' | 'selection') | null
  relationTo?: 'products' | null
  categories?: (number | Category)[] | null
  limit?: number | null
  selectedDocs?:
    | {
        relationTo: 'products'
        value: number | Product
      }[]
    | null
  populatedDocs?:
    | {
        relationTo: 'products'
        value: number | Product
      }[]
    | null
  populatedDocsTotal?: number | null
  id?: string | null
  blockName?: string | null
  blockType: 'archive'
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number
  title: string
  slug: string
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselBlock".
 */
export interface CarouselBlock {
  populateBy?: ('collection' | 'selection') | null
  relationTo?: 'products' | null
  categories?: (number | Category)[] | null
  limit?: number | null
  selectedDocs?:
    | {
        relationTo: 'products'
        value: number | Product
      }[]
    | null
  populatedDocs?:
    | {
        relationTo: 'products'
        value: number | Product
      }[]
    | null
  populatedDocsTotal?: number | null
  id?: string | null
  blockName?: string | null
  blockType: 'carousel'
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ThreeItemGridBlock".
 */
export interface ThreeItemGridBlock {
  products?: (number | Product)[] | null
  id?: string | null
  blockName?: string | null
  blockType: 'threeItemGrid'
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success'
  content: {
    root: {
      type: string
      children: {
        type: string
        version: number
        [k: string]: unknown
      }[]
      direction: ('ltr' | 'rtl') | null
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
      indent: number
      version: number
    }
    [k: string]: unknown
  }
  id?: string | null
  blockName?: string | null
  blockType: 'banner'
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number
  from: string
  to?: {
    type?: ('reference' | 'custom') | null
    reference?:
      | ({
          relationTo: 'pages'
          value: number | Page
        } | null)
      | ({
          relationTo: 'products'
          value: number | Product
        } | null)
    url?: string | null
  }
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number
  title: string
  fields?:
    | (
        | {
            name: string
            label?: string | null
            width?: number | null
            required?: boolean | null
            defaultValue?: boolean | null
            id?: string | null
            blockName?: string | null
            blockType: 'checkbox'
          }
        | {
            name: string
            label?: string | null
            width?: number | null
            required?: boolean | null
            id?: string | null
            blockName?: string | null
            blockType: 'country'
          }
        | {
            name: string
            label?: string | null
            width?: number | null
            required?: boolean | null
            id?: string | null
            blockName?: string | null
            blockType: 'email'
          }
        | {
            message?: {
              root: {
                type: string
                children: {
                  type: string
                  version: number
                  [k: string]: unknown
                }[]
                direction: ('ltr' | 'rtl') | null
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
                indent: number
                version: number
              }
              [k: string]: unknown
            } | null
            id?: string | null
            blockName?: string | null
            blockType: 'message'
          }
        | {
            name: string
            label?: string | null
            width?: number | null
            defaultValue?: number | null
            required?: boolean | null
            id?: string | null
            blockName?: string | null
            blockType: 'number'
          }
        | {
            name: string
            label?: string | null
            width?: number | null
            defaultValue?: string | null
            options?:
              | {
                  label: string
                  value: string
                  id?: string | null
                }[]
              | null
            required?: boolean | null
            id?: string | null
            blockName?: string | null
            blockType: 'select'
          }
        | {
            name: string
            label?: string | null
            width?: number | null
            required?: boolean | null
            id?: string | null
            blockName?: string | null
            blockType: 'state'
          }
        | {
            name: string
            label?: string | null
            width?: number | null
            defaultValue?: string | null
            required?: boolean | null
            id?: string | null
            blockName?: string | null
            blockType: 'text'
          }
        | {
            name: string
            label?: string | null
            width?: number | null
            defaultValue?: string | null
            required?: boolean | null
            id?: string | null
            blockName?: string | null
            blockType: 'textarea'
          }
      )[]
    | null
  submitButtonLabel?: string | null
  confirmationType?: ('message' | 'redirect') | null
  confirmationMessage?: {
    root: {
      type: string
      children: {
        type: string
        version: number
        [k: string]: unknown
      }[]
      direction: ('ltr' | 'rtl') | null
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
      indent: number
      version: number
    }
    [k: string]: unknown
  } | null
  redirect?: {
    url: string
  }
  emails?:
    | {
        emailTo?: string | null
        cc?: string | null
        bcc?: string | null
        replyTo?: string | null
        emailFrom?: string | null
        subject: string
        message?: {
          root: {
            type: string
            children: {
              type: string
              version: number
              [k: string]: unknown
            }[]
            direction: ('ltr' | 'rtl') | null
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
            indent: number
            version: number
          }
          [k: string]: unknown
        } | null
        id?: string | null
      }[]
    | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number
  form: number | Form
  submissionData?:
    | {
        field: string
        value: string
        id?: string | null
      }[]
    | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number
  document?:
    | ({
        relationTo: 'users'
        value: number | User
      } | null)
    | ({
        relationTo: 'products'
        value: number | Product
      } | null)
    | ({
        relationTo: 'pages'
        value: number | Page
      } | null)
    | ({
        relationTo: 'categories'
        value: number | Category
      } | null)
    | ({
        relationTo: 'media'
        value: number | Media
      } | null)
    | ({
        relationTo: 'orders'
        value: number | Order
      } | null)
    | ({
        relationTo: 'redirects'
        value: number | Redirect
      } | null)
    | ({
        relationTo: 'forms'
        value: number | Form
      } | null)
    | ({
        relationTo: 'form-submissions'
        value: number | FormSubmission
      } | null)
  globalSlug?: string | null
  user: {
    relationTo: 'users'
    value: number | User
  }
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number
  user: {
    relationTo: 'users'
    value: number | User
  }
  key?: string | null
  value?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number
  name?: string | null
  batch?: number | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T
  roles?: T
  orders?: T
  stripeCustomerID?: T
  cart?:
    | T
    | {
        items?:
          | T
          | {
              product?: T
              variant?: T
              stripeProductID?: T
              quantity?: T
              url?: T
              id?: T
            }
      }
  skipSync?: T
  updatedAt?: T
  createdAt?: T
  email?: T
  resetPasswordToken?: T
  resetPasswordExpiration?: T
  salt?: T
  hash?: T
  loginAttempts?: T
  lockUntil?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T
  publishedOn?: T
  description?: T
  gallery?:
    | T
    | {
        image?: T
        id?: T
      }
  layout?:
    | T
    | {
        cta?:
          | T
          | {
              richText?: T
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T
                          newTab?: T
                          reference?: T
                          url?: T
                          label?: T
                          appearance?: T
                        }
                    id?: T
                  }
              id?: T
              blockName?: T
            }
        content?:
          | T
          | {
              columns?:
                | T
                | {
                    size?: T
                    richText?: T
                    enableLink?: T
                    link?:
                      | T
                      | {
                          type?: T
                          newTab?: T
                          reference?: T
                          url?: T
                          label?: T
                          appearance?: T
                        }
                    id?: T
                  }
              id?: T
              blockName?: T
            }
        mediaBlock?:
          | T
          | {
              position?: T
              media?: T
              id?: T
              blockName?: T
            }
      }
  enableVariants?: T
  variants?:
    | T
    | {
        options?:
          | T
          | {
              label?: T
              slug?: T
              values?:
                | T
                | {
                    label?: T
                    slug?: T
                    id?: T
                  }
              id?: T
            }
        variants?:
          | T
          | {
              options?: T
              stripeProductID?: T
              stock?: T
              info?: T
              images?:
                | T
                | {
                    image?: T
                    id?: T
                  }
              id?: T
            }
      }
  stripeProductID?: T
  info?: T
  stock?: T
  price?: T
  currency?: T
  categories?: T
  relatedProducts?: T
  slug?: T
  skipSync?: T
  meta?:
    | T
    | {
        overview?: T
        title?: T
        description?: T
        image?: T
        preview?: T
      }
  updatedAt?: T
  createdAt?: T
  _status?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T
  publishedOn?: T
  hero?:
    | T
    | {
        type?: T
        richText?: T
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T
                    newTab?: T
                    reference?: T
                    url?: T
                    label?: T
                    appearance?: T
                  }
              id?: T
            }
        media?: T
      }
  layout?:
    | T
    | {
        cta?:
          | T
          | {
              richText?: T
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T
                          newTab?: T
                          reference?: T
                          url?: T
                          label?: T
                          appearance?: T
                        }
                    id?: T
                  }
              id?: T
              blockName?: T
            }
        content?:
          | T
          | {
              columns?:
                | T
                | {
                    size?: T
                    richText?: T
                    enableLink?: T
                    link?:
                      | T
                      | {
                          type?: T
                          newTab?: T
                          reference?: T
                          url?: T
                          label?: T
                          appearance?: T
                        }
                    id?: T
                  }
              id?: T
              blockName?: T
            }
        mediaBlock?:
          | T
          | {
              position?: T
              media?: T
              id?: T
              blockName?: T
            }
        archive?:
          | T
          | {
              introContent?: T
              populateBy?: T
              relationTo?: T
              categories?: T
              limit?: T
              selectedDocs?: T
              populatedDocs?: T
              populatedDocsTotal?: T
              id?: T
              blockName?: T
            }
        carousel?:
          | T
          | {
              populateBy?: T
              relationTo?: T
              categories?: T
              limit?: T
              selectedDocs?: T
              populatedDocs?: T
              populatedDocsTotal?: T
              id?: T
              blockName?: T
            }
        threeItemGrid?:
          | T
          | {
              products?: T
              id?: T
              blockName?: T
            }
        banner?:
          | T
          | {
              style?: T
              content?: T
              id?: T
              blockName?: T
            }
      }
  slug?: T
  meta?:
    | T
    | {
        overview?: T
        title?: T
        description?: T
        image?: T
        preview?: T
      }
  updatedAt?: T
  createdAt?: T
  _status?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T
  slug?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T
  caption?: T
  updatedAt?: T
  createdAt?: T
  url?: T
  thumbnailURL?: T
  filename?: T
  mimeType?: T
  filesize?: T
  width?: T
  height?: T
  focalX?: T
  focalY?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderedBy?: T
  stripePaymentIntentID?: T
  total?: T
  currency?: T
  items?:
    | T
    | {
        product?: T
        variant?: T
        quantity?: T
        id?: T
      }
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T
  to?:
    | T
    | {
        type?: T
        reference?: T
        url?: T
      }
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T
              label?: T
              width?: T
              required?: T
              defaultValue?: T
              id?: T
              blockName?: T
            }
        country?:
          | T
          | {
              name?: T
              label?: T
              width?: T
              required?: T
              id?: T
              blockName?: T
            }
        email?:
          | T
          | {
              name?: T
              label?: T
              width?: T
              required?: T
              id?: T
              blockName?: T
            }
        message?:
          | T
          | {
              message?: T
              id?: T
              blockName?: T
            }
        number?:
          | T
          | {
              name?: T
              label?: T
              width?: T
              defaultValue?: T
              required?: T
              id?: T
              blockName?: T
            }
        select?:
          | T
          | {
              name?: T
              label?: T
              width?: T
              defaultValue?: T
              options?:
                | T
                | {
                    label?: T
                    value?: T
                    id?: T
                  }
              required?: T
              id?: T
              blockName?: T
            }
        state?:
          | T
          | {
              name?: T
              label?: T
              width?: T
              required?: T
              id?: T
              blockName?: T
            }
        text?:
          | T
          | {
              name?: T
              label?: T
              width?: T
              defaultValue?: T
              required?: T
              id?: T
              blockName?: T
            }
        textarea?:
          | T
          | {
              name?: T
              label?: T
              width?: T
              defaultValue?: T
              required?: T
              id?: T
              blockName?: T
            }
      }
  submitButtonLabel?: T
  confirmationType?: T
  confirmationMessage?: T
  redirect?:
    | T
    | {
        url?: T
      }
  emails?:
    | T
    | {
        emailTo?: T
        cc?: T
        bcc?: T
        replyTo?: T
        emailFrom?: T
        subject?: T
        message?: T
        id?: T
      }
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T
  submissionData?:
    | T
    | {
        field?: T
        value?: T
        id?: T
      }
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T
  globalSlug?: T
  user?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T
  key?: T
  value?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T
  batch?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null
          newTab?: boolean | null
          reference?: {
            relationTo: 'pages'
            value: number | Page
          } | null
          url?: string | null
          label: string
        }
        id?: string | null
      }[]
    | null
  updatedAt?: string | null
  createdAt?: string | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null
          newTab?: boolean | null
          reference?: {
            relationTo: 'pages'
            value: number | Page
          } | null
          url?: string | null
          label: string
        }
        id?: string | null
      }[]
    | null
  updatedAt?: string | null
  createdAt?: string | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T
              newTab?: T
              reference?: T
              url?: T
              label?: T
            }
        id?: T
      }
  updatedAt?: T
  createdAt?: T
  globalType?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T
              newTab?: T
              reference?: T
              url?: T
              label?: T
            }
        id?: T
      }
  updatedAt?: T
  createdAt?: T
  globalType?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown
}

declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
